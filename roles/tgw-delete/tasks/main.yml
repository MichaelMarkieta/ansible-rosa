---
- name: fetch transit gateway
  ec2_transit_gateway_info:
    filters:
      "tag:Name": "rosa-{{ cluster_name }}-tgw"
  register: _tgw

- name: detach VPC to transit gateway
  shell: |
    AWS_PAGER=""
    for TGW_A in $(aws ec2 describe-transit-gateway-vpc-attachments \
          --filters Name=transit-gateway-id,Values={{ _tgw.transit_gateways[0].transit_gateway_id }} \
          --query 'TransitGatewayVpcAttachments[*].TransitGatewayAttachmentId' \
          --output text | xargs)
      do
        aws ec2 delete-transit-gateway-vpc-attachment --transit-gateway-attachment-id $TGW_A
        while [ "$(aws ec2 describe-transit-gateway-vpc-attachments \
            --filters Name=transit-gateway-attachment-id,Values=$TGW_A \
            --query 'TransitGatewayVpcAttachments[*].State' \
            --output text)" != "deleted" ]; do
          echo "Waiting for transit gateway attachment to detach"
          sleep 5
        done
    done
  when: _tgw.transit_gateways | length > 0

- name: delete transit gateway
  ec2_transit_gateway:
    state: absent
    region: "{{ rosa_region }}"
    description: "rosa {{ cluster_name }} transit gateway"
    tags: { "Name": "rosa-{{ cluster_name }}-tgw" }
  when: _tgw.transit_gateways | length > 0

- ec2_vpc_net_info:
    filters:
      "tag:Name": "rosa-{{ cluster_name }}-egress"
  register: vpc_info

- when: vpc_info.vpcs | length > 0
  block:
    - set_fact:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"

    - debug:
        var: vpc_id

    ## NAT Gateway
    - ec2_vpc_nat_gateway_info:
        filters:
          vpc-id: "{{ vpc_id }}"
      register: _nat_gw_info

    - name: delete nat gateways
      ec2_vpc_nat_gateway:
        state: absent
        nat_gateway_id: "{{ item.nat_gateway_id }}"
        release_eip: yes
        wait: yes
      with_items: "{{ _nat_gw_info.result }}"
      when: item.state != 'deleted'

    # Internet Gateway
    - ec2_vpc_igw_info:
        filters:
          attachment.vpc-id: "{{ vpc_id }}"
      register: igw_info

    - name: delete internet gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc_id }}"
        state: absent

    ## Subnets
    - ec2_vpc_subnet_info:
        filters:
          vpc-id: "{{ vpc_id }}"
      register: subnet_info

    - name: delete private subnets
      ec2_vpc_subnet:
        state: absent
        vpc_id: "{{ vpc_id }}"
        cidr: "{{ item.cidr_block }}"
      with_items: "{{ subnet_info.subnets }}"
      when: item.state != 'deleted'

    ## Route Tables
    - ec2_vpc_route_table_info:
        filters:
          vpc-id: "{{ vpc_id }}"
        region: "{{ region | default('us-east-2') }}"
      register: route_table_info

    - name: delete public subnet route table
      ec2_vpc_route_table:
        state: absent
        vpc_id: "{{ vpc_id }}"
        route_table_id: "{{ item.id }}"
        lookup: id
      with_items: "{{ route_table_info.route_tables }}"
      when: item.associations | length == 0

    ## VPC
    - name: delete the vpc
      ec2_vpc_net:
        state: absent
        name: "rosa-{{ cluster_name }}-egress"
        cidr_block: "{{ rosa_tgw_vpc_cidr }}"

