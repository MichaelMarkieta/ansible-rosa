---
- name: create a vpc
  ec2_vpc_net:
    name: "rosa-{{ cluster_name }}-egress"
    cidr_block: "{{ rosa_tgw_vpc_cidr }}"
  register: _vpc

- set_fact:
    tgw_vpc_id: "{{ _vpc.vpc.id }}"

- name: create private subnets
  ec2_vpc_subnet:
    vpc_id: "{{ tgw_vpc_id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    purge_tags: false
    resource_tags: "{{ item.resource_tags }}"
  with_items: "{{ rosa_tgw_vpc_private_subnets }}"
  register: _private_subnets

- name: create public subnets
  ec2_vpc_subnet:
    vpc_id: "{{ tgw_vpc_id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    purge_tags: false
    resource_tags: "{{ item.resource_tags }}"
  with_items: "{{ rosa_tgw_vpc_public_subnets }}"
  register: _public_subnets

- name: figure out list of subnets
  set_fact:
    _tgw_private_subnet_ids: "{{ _private_subnets.results | default([]) | json_query('[*].subnet.id') }}"
    _tgw_public_subnet_ids:  "{{ _public_subnets.results  | default([]) | json_query('[*].subnet.id') }}"


- name: attach VPC to transit gateway
  shell: |
    aws ec2 create-transit-gateway-vpc-attachment \
      --transit-gateway-id {{ tgw_id }} \
      --vpc-id {{ tgw_vpc_id }} \
      --subnet-ids {{ _tgw_private_subnet_ids | join(" ") }} \
      || aws ec2 describe-transit-gateway-vpc-attachments \
          --filters Name=vpc-id,Values={{ tgw_vpc_id }}

  register: _tgw_attachment_cmd
  changed_when: _tgw_attachment_cmd.stderr == ""

- name: wait for transit gateway attachment to become available
  shell: |
    while [ "$(aws ec2 describe-transit-gateway-vpc-attachments \
        --filters Name=vpc-id,Values={{ tgw_vpc_id }} \
        --query 'TransitGatewayVpcAttachments[0].State' \
        --output text)" != "available" ]; do
      sleep 5
    done

    aws ec2 describe-transit-gateway-vpc-attachments \
        --filters Name=vpc-id,Values={{ tgw_vpc_id }} \
        --query 'TransitGatewayVpcAttachments[0].TransitGatewayAttachmentId' \
        --output text
  register: _tgw_attachment_describe

- set_fact:
    _tgw_attachment_id: "{{ _tgw_attachment_describe.stdout }}"




# - set_fact:
#     _tgw_attachment:
#       TransitGatewayVpcAttachment: "{{ _tgw_attachment.TransitGatewayVpcAttachments }}"
#     when: _tgw_attachment.TransitGatewayVpcAttachment is not defined
# - fail:
#     msg: "Transit gateway attachment failed:\n {{ _tgw_attachment | to_nice_json }}"

- name: create internet gateway
  ec2_vpc_igw:
    vpc_id: "{{ tgw_vpc_id }}"
    state: present
    # tags:
    #   Name: "rosa-public-{{ cluster_name }}-igw"
  register: _igw

- name: create public subnet route table
  ec2_vpc_route_table:
    vpc_id: "{{ tgw_vpc_id }}"
    tags:
      Name: "public-route-table"
    subnets: "{{ _tgw_public_subnet_ids }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ _igw.gateway_id }}"
      - dest: "{{ rosa_tgw_cidr }}"
        gateway_id: "{{ tgw_id }}"

# Private subnet routes

- with_items: "{{ _public_subnets.results }}"
  include_tasks: nat_gateway_routes.yml
  loop_control:
    loop_var: outer_item

