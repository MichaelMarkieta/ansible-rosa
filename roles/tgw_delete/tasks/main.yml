---
- name: fetch transit gateway
  ec2_transit_gateway_info:
    region: "{{ rosa_region }}"
    filters:
      state: "available"
      "tag:Name": "rosa-{{ cluster_name }}-tgw"

  register: _tgw

- block:
    - name: fetch TGW attachments
      community.aws.ec2_transit_gateway_vpc_attachment_info:
        region: "{{ rosa_region }}"
        filters:
          transit-gateway-id: "{{ _tgw.transit_gateways[0].transit_gateway_id }}"
      register: _tgw_attach_info

    - name: detach VPCs frpm transit gateway
      community.aws.ec2_transit_gateway_vpc_attachment:
        region: "{{ rosa_region }}"
        state: absent
        id: "{{ item.transit_gateway_attachment_id }}"
      with_items: "{{ _tgw_attach_info.attachments }}"
    # - name: detach VPC to transit gateway
      # shell: |
      #   AWS_PAGER=""
      #   for TGW_A in $(aws ec2 describe-transit-gateway-vpc-attachments \
      #         --filters Name=transit-gateway-id,Values={{ _tgw.transit_gateways[0].transit_gateway_id }} \
      #         --query 'TransitGatewayVpcAttachments[*].TransitGatewayAttachmentId' \
      #         --output text | xargs)
      #     do
      #       aws ec2 delete-transit-gateway-vpc-attachment --transit-gateway-attachment-id $TGW_A
      #       while [ "$(aws ec2 describe-transit-gateway-vpc-attachments \
      #           --filters Name=transit-gateway-attachment-id,Values=$TGW_A \
      #           --query 'TransitGatewayVpcAttachments[*].State' \
      #           --output text)" != "deleted" ]; do
      #         echo "Waiting for transit gateway attachment to detach"
      #         sleep 5
      #       done
      #   done
      # when: _tgw.transit_gateways | length > 0

    - name: delete transit gateway
      ec2_transit_gateway:
        state: absent
        region: "{{ rosa_region }}"
        description: "rosa {{ cluster_name }} transit gateway"
        tags: { "Name": "rosa-{{ cluster_name }}-tgw" }
      when: _tgw.transit_gateways | length > 0
  when: _tgw.transit_gateways | length > 0
