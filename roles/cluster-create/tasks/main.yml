---
- name: what cluster am i creating?
  debug:
    msg: |
      ***************************************
      Preparing to create {{ cluster_name }}.
      This task may take up to an hour.
      ***************************************
    verbosity: 0

- when:
    - aws_account_id is not defined
    - rosa_sts | bool
  block:
    - name: get aws caller info for accountid
      aws_caller_info:
      register: _aws_caller_info

    - set_fact:
        aws_account_id: "{{ _aws_caller_info.account }}"

# do this better ... maybe better set during vpc creation and inherited.
- when: rosa_subnet_ids | length == 0
  block:
    - name: figure out list of subnets
      set_fact:
        _private_subnet_ids: "{{ _private_subnets.results | default([]) | json_query('[*].subnet.id') }}"
        _public_subnet_ids:  "{{ _public_subnets.results  | default([]) | json_query('[*].subnet.id') }}"
      when:
        - _private_subnets is defined or _public_subnets is defined
    - name: set subnet_ids when private-link cluster
      set_fact:
        rosa_subnet_ids: "{{ _private_subnet_ids }}"
      when: (rosa_private_link | bool)
    - name: set subnet_ids when public or private cluster
      set_fact:
        rosa_subnet_ids: "{{ _private_subnet_ids + _public_subnet_ids }}"
      when: (not rosa_private_link | bool)



# - name: check if the cluster already exists
#   command: "rosa describe cluster --cluster {{ cluster_name }}"
#   register: _cluster_exists
#   failed_when: false
#   changed_when: false

# - fail:
#     var: _cluster_exists |V0\CPcgSE(Te|

- name: check if cluster exists
  rosa_cluster_info:
    name: "{{ cluster_name }}"
  register: _cluster_exists

- name: configure proxy settings
  set_fact:
    rosa_http_proxy: "http://{{ proxy_private_ip }}:3128"
    rosa_https_proxy: "http://{{ proxy_private_ip }}:3128"
    rosa_additional_trust_bundle_file: "roles/proxy-create/files/squid-ca-cert.pem"
  when: proxy_enabled | bool

- fail:
    msg: "cluster autoscaling must be enabled to set min/max replicas"
  when:
    - not rosa_enable_autoscaling | bool
    - rosa_min_replicas is defined or rosa_max_replicas is defined

- block:
    - name: create cluster
      rosa_cluster:
        # state: dry-run
        name: "{{ cluster_name }}"
        private: "{{ rosa_private }}"
        private_link: "{{ rosa_private_link }}"
        sts: "{{ rosa_sts }}"
        aws_account_id: "{{ aws_account_id | default(omit) }}"
        machine_cidr: "{{ rosa_vpc_cidr }}"
        multi_az: "{{ rosa_multi_az | default(False) | bool }}"
        subnet_ids: "{{ rosa_subnet_ids | join(',') }}"
        version: "{{ rosa_version }}"
        http_proxy: "{{ rosa_http_proxy | default(omit) }}"
        https_proxy: "{{ rosa_https_proxy | default(omit) }}"
        additional_trust_bundle_file: "{{ rosa_additional_trust_bundle_file | default(omit) }}"
        enable_autoscaling: "{{ rosa_enable_autoscaling | bool }}"
        disable_workload_monitoring: "{{ rosa_disable_workload_monitoring | bool }}"
        min_replicas: "{{ rosa_min_replicas | default(omit) }}"
        max_replicas: "{{ rosa_max_replicas | default(omit) }}"
        role_arn: "arn:aws:iam::{{ aws_account_id }}:role/ManagedOpenShift-Installer-Role"
        support_role_arn: "arn:aws:iam::{{ aws_account_id }}:role/ManagedOpenShift-Support-Role"
        controlplane_iam_role: "arn:aws:iam::{{ aws_account_id }}:role/ManagedOpenShift-ControlPlane-Role"
        worker_iam_role: "arn:aws:iam::{{ aws_account_id }}:role/ManagedOpenShift-Worker-Role"
      register: _rosa_cluster

    - name: wait for cluster to be ready
      rosa_cluster_info:
        name: "{{ cluster_name }}"
      register: _cluster_ready
      until: _cluster_ready.cluster.state == "ready"
      retries: 120
      delay: 60
      when:
        - _rosa_cluster.changed | bool
        - rosa_wait | bool
  when: _cluster_exists.cluster == {}
